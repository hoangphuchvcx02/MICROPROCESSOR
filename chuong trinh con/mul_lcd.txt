.ORG 00
.DEF ANSL = R2            ;To hold low-byte of answer
.DEF ANSH = R3            ;To hold high-byte of answer     
.DEF REML = R4            ;To hold low-byte of remainder
.DEF REMH = R5            ;To hold high-byte of remainder
.DEF   AL = R20           ;To hold low-byte of dividend // SO BI CHIA
.DEF   AH = R21           ;To hold high-byte of dividend
.DEF   BL = R22           ;To hold low-byte of divisor // SO CHIA
.DEF   BH = R23           ;To hold high-byte of divisor   
.DEF    C = R24           ;Bit Counter


.EQU LCD=PORTB ;PORTC giao ti?p bus LCD 16 x 2
.EQU LCD_DR=DDRB
.EQU LCD_IN=PINB
.EQU CONT=PORTB

.EQU RS=0 ;bit RS
.EQU RW=1 ;bit RW
.EQU E=2 ;bit E
.EQU CR=$0D ;mã xu?ng dòng
.EQU NULL=$00 ;mã k?t thúc
.EQU ENTER=$0D ;mã xu?ng dòng
.EQU CHR_ROW = 16
.DEF CNT_ROW = R6 ;??m s? ký t? m?i hàng


; Replace with your application code
;----------------SET UP OUTPUT/INPUT----------------------
    LDI R16,HIGH(RAMEND) ;??a stack lên vùng ??a ch? cao
	OUT SPH,R16
	LDI R16,LOW(RAMEND)
	OUT SPL,R16
	LDI R16,0X00

	OUT DDRA,R16; SET PORTA IS INPUT FROM SWITCH
	LDI R16,0XFF
	OUT PORTA,R16; SET PORTA IS INPUT FROM SWITCH

	OUT LCD_DR,R16 ;khai báo PORTC là output
	CBI LCD,RS ;RS=PC0=0
	CBI LCD,RW ;RW=PC1=0 truy xu?t ghi
	CBI LCD,E ;E=PC2=0 c?m LCD
	
	RCALL POWER_RESET_LCD4 ;reset c?p ngu?n LCD 4 bit
	RCALL INIT_LCD4
//	rcall	USART_Init
	


	;ctc kh?i ??ng LCD 4 bit


LOOP:
	CBI LCD,RS
	;RS=0 ghi l?nh
	LDI R17,0x80 ;con tr? b?t ??u ? ??u dòng 2
	RCALL OUT_LCD4_2
	LDI R16,1	;ch? 100?s
	RCALL DELAY_US
A:	IN R18,PINA
	COM R18
	LDI R19,$09
	MUL R18,R19


B:	
MOV AL,R0   ;Load low-byte of dividend into AL
MOV AH,R1  ;Load HIGH-byte of dividend into AH
LDI BL,LOW(10)    ;Load low-byte of divisor into BL
LDI BH,HIGH(10)   ;Load high-byte of divisor into BH
RCALL DIV1616
MOV R29,REML
	MOV AL,ANSL   ;Load low-byte of dividend into AL
	MOV AH,ANSH  ;Load HIGH-byte of dividend into AH
	LDI BL,LOW(10)    ;Load low-byte of divisor into BL
	LDI BH,HIGH(10)   ;Load high-byte of divisor into BH
	RCALL DIV1616
	MOV R28,REML
		MOV AL,ANSL   ;Load low-byte of dividend into AL
		MOV AH,ANSH  ;Load HIGH-byte of dividend into AH
		LDI BL,LOW(10)    ;Load low-byte of divisor into BL
		LDI BH,HIGH(10)   ;Load high-byte of divisor into BH
		RCALL DIV1616
		MOV R27,REML
			MOV AL,ANSL   ;Load low-byte of dividend into AL
			MOV AH,ANSH  ;Load HIGH-byte of dividend into AH
			LDI BL,LOW(10)    ;Load low-byte of divisor into BL
			LDI BH,HIGH(10)   ;Load high-byte of divisor into BH
			RCALL DIV1616
			MOV R26,REML
	RJMP MAIN_PROGRAM
			
MAIN_PROGRAM:
LED3:		
		//MOV R16,R26
	MOV R17,R26 ;copy d? li?u xu?t ra LCD
	RCALL OUT_LCD4_2 ;ghi mã ASCII ký t? ra LCD
	LDI R16,1 ;ch? 100?s
	RCALL DELAY_US


LED2:
		MOV R17,R27 ;copy d? li?u xu?t ra LCD
	RCALL OUT_LCD4_2 ;ghi mã ASCII ký t? ra LCD
	LDI R16,1 ;ch? 100?s
	RCALL DELAY_US
		

LED1:
MOV R17,R28 ;copy d? li?u xu?t ra LCD
	RCALL OUT_LCD4_2 ;ghi mã ASCII ký t? ra LCD
	LDI R16,1 ;ch? 100?s
	RCALL DELAY_US

LED0:	
MOV R17,R29 ;copy d? li?u xu?t ra LCD
	RCALL OUT_LCD4_2 ;ghi mã ASCII ký t? ra LCD
	LDI R16,1 ;ch? 100?s
	RCALL DELAY_US
	
	RJMP LOOP


///////////////////////////////////////////////////

	;-----------------------------------------------------------------
;Các l?nh reset c?p ngu?n LCD4 bit
;Ch? h?n 15ms
;Ghi 4 bit mã l?nh 30H l?n 1, ch? ít nh?t 4.1ms
;Ghi 4 bit mã l?nh 30H l?n 2, ch? ít nh?t 100?s

;Ghi byte mã l?nh32H, ch? ít nh?t 100?s sau m?i l?n ghi 4 bit

;-----------------------------------------------------------------
POWER_RESET_LCD4:
LDI R16,200 ;delay 20ms
RCALL DELAY_US ;ctc delay 100?sxR16
;Ghi 4 bit cao mã l?nh 30H l?n 1, ch? 4.2ms
CBI LCD,RS ;RS=0 ghi l?nh
LDI R17,$30 ;mã l?nh=$30 l?n 1,RS=RW=E=0
RCALL OUT_LCD4 ;ctc ghi ra LCD 4 bit cao
LDI R16,42 ;delay 4.2ms
RCALL DELAY_US
;Ghi 4 bit cao mã l?nh 30H l?n 2, ch? 200?s
CBI LCD,RS ;RS=0 ghi l?nh
LDI R17,$30 ;mã l?nh=$30 l?n 2
RCALL OUT_LCD4 ;ctc ghi ra LCD 4 bit cao
LDI R16,2 ;delay 200?s
RCALL DELAY_US
;Ghi byte mã l?nh 32H
CBI LCD,RS ;RS=0 ghi l?nh
LDI R17,$32
RCALL OUT_LCD4_2; ctc ghi 1 byte, m?i l?n 4 bit
RET

;-----------------------------------------------------------------
;INIT_LCD4 kh?i ??ng LCD ghi 4 byte mã l?nh
;Function set: 0x28: 4 bit, 2 dòng font 5x8
;Clear display: 0x01: xóa màn hình
;Display on/off control: 0x0C: màn hình on, con tr? off
;Entry mode set: 0x06: d?ch ph?i con tr?, ??a ch? DDRAM t?ng 1 khi ghi data
;----------------------------------------------------------------
INIT_LCD4: CBI LCD,RS ;RS=0 ghi l?nh

LDI R17,0x28 ;ch? ?? giao ti?p 4 bit, 2 dòng font 5x8
RCALL OUT_LCD4_2
;----------------------------------------------------------------
CBI LCD,RS ;RS=0 ghi l?nh
LDI R17,0x01 ;xóa màn hình
RCALL OUT_LCD4_2
LDI R16,20 ;ch? 2ms sau l?nh Clear display
RCALL DELAY_US
;----------------------------------------------------------------
CBI LCD,RS ;RS=0 ghi l?nh
LDI R17,0x0C ;màn hình on, con tr? off
RCALL OUT_LCD4_2
;----------------------------------------------------------------
CBI LCD,RS ;RS=0 ghi l?nh
LDI R17,0x06 ;d?ch ph?i con tr?, ??a ch? DDRAM t?ng 1 khi ghi data
RCALL OUT_LCD4_2
;----------------------------------------------------------------
RET


;--------------------------------------------------
;OUT_LCD4_2 ghi 1 byte mã l?nh/data ra LCD
;chia làm 2 l?n ghi 4bit: 4 bit cao tr??c, 4 bit th?p sau
;Input: R17 ch?a mã l?nh/data,R16
;bit RS=0/1:l?nh/data,bit RW=0:ghi
;S? d?ng ctc OUT_LCD4
;--------------------------------------------------
OUT_LCD4_2:

IN R16,LCD ;??c PORT LCD
ANDI R16,(1<<RS) ;l?c bit RS
PUSH R16 ;c?t R16
PUSH R17 ;c?t R17
ANDI R17,$F0 ;l?y 4 bit cao
OR R17,R16 ;ghép bit RS
RCALL OUT_LCD4 ;ghi ra LCD
LDI R16,1 ;ch? 100us
RCALL DELAY_US
POP R17 ;ph?c h?i R17
POP R16 ;ph?c h?i R16
SWAP R17 ;??o 4 bit
;l?y 4 bit th?p chuy?n thành cao
ANDI R17,$F0
OR R17,R16 ;ghép bit RS
RCALL OUT_LCD4;ghi ra LCD
LDI R16,1 ;ch? 100us
RCALL DELAY_US
RET

;--------------------------------------------------
;OUT_LCD4 ghi mã l?nh/data ra LCD
;Input: R17 ch?a mã l?nh/data 4 bit cao ;--------------------------------------------------
OUT_LCD4: 
OUT LCD,R17
SBI LCD,E
CBI LCD,E
RET

;-------------------------------------------------------
;DELAY_US t?o th?i gian tr? =R16x100?s(Fosc=8MHz, CKDIV8 = 1)
;Input:R16 h? s? nhân th?i gian tr? 1 ??n 255 ;-------------------------------------------------------
DELAY_US: MOV R15,R16 ;1MC n?p data cho R15
LDI R16,200 ;1MC s? d?ng R16
L1: MOV R14,R16 ;1MC n?p data cho R14
L2: DEC R14 ;1MC
NOP ;1MC
BRNE L2 ;2/1MC
DEC R15 ;1MC
BRNE L1 ;2/1MC
RET ;4MC



DIV1616:
		MOVW ANSH:ANSL,AH:AL ;Copy dividend into answer
		LDI C,17          ;Load bit counter
		SUB REML,REML     ;Clear Remainder and Carry
		CLR REMH          ;
	LOOP_DIV:   ROL ANSL          ;Shift the answer to the left
		ROL ANSH          ;
		DEC C             ;Decrement Counter
		BREQ DONE        ;Exit if sixteen bits done
		ROL REML          ;Shift remainder to the left
		ROL REMH          ;
		SUB REML,BL       ;Try to subtract divisor from remainder
		SBC REMH,BH
		BRCC SKIP        ;If the result was negative then
		ADD REML,BL       ;reverse the subtraction to try again
		ADC REMH,BH       ;
		CLC               ;Clear Carry Flag so zero shifted into A
		RJMP LOOP_DIV        ;Loop Back
	SKIP:   SEC               ;Set Carry Flag to be shifted into A
		RJMP LOOP_DIV
	DONE: RET